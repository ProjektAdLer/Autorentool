@page "/AuthoringToolWorkspaceView"
@using AuthoringTool.PresentationLogic
@using AuthoringTool.Components

<h3>AuthoringTool Workspace</h3>

<p role="status">Current count of learning worlds: @AuthoringToolWorkspaceVm.LearningWorlds.Count</p>
<ul>
    @foreach (var world in AuthoringToolWorkspaceVm.LearningWorlds)
    {
        <li>
            test
        </li>
    }
</ul>
<button class="btn btn-primary" @onclick="AddNewLearningWorld">Add Learning World</button>
<button class="btn btn-primary" @onclick="DeleteLastLearningWorld">Delete Learning World</button>
@if (AuthoringToolWorkspaceP.CreateLearningWorldDialogueOpen)
{
    <ModalDialog Title="Create new learning world" Text="Foo bar bla bla hier müssen Input Felder hin"
                 OnClose="@OnDeleteDialogClose" DialogType=@ModalDialog.ModalDialogType.Ok>
    </ModalDialog>
}
@code {

    /// <summary>
    /// Default constructor
    /// </summary>
    public AuthoringToolWorkspaceView()
    {
        AuthoringToolWorkspaceVm = new AuthoringToolWorkspaceViewModel();
        AuthoringToolWorkspaceP = new AuthoringToolWorkspacePresenter(AuthoringToolWorkspaceVm);
        
    }
    
    /// <summary>
    /// Testable constructor: use only for test purpose!
    /// </summary>
    public AuthoringToolWorkspaceView(
        AuthoringToolWorkspacePresenter authoringToolWorkspaceP,
        AuthoringToolWorkspaceViewModel authoringToolWorkspaceVm)
    {
        AuthoringToolWorkspaceP = authoringToolWorkspaceP;
        AuthoringToolWorkspaceVm = authoringToolWorkspaceVm;
    }
    
    private AuthoringToolWorkspacePresenter AuthoringToolWorkspaceP { get; set; }
    private AuthoringToolWorkspaceViewModel AuthoringToolWorkspaceVm { get; set; }
    
    private void AddNewLearningWorld()
    {
        AuthoringToolWorkspaceP.CreateLearningWorldDialogueOpen = true;
    //AuthoringToolWorkspaceP.CreateNewLearningWorld();
    }
    
    private void DeleteLastLearningWorld()
    {
        AuthoringToolWorkspaceP.DeleteLastLearningWorld();
    }

    private Task OnDeleteDialogClose(ModalDialog.ModalDialogReturnValue returnValue)
    {
        AuthoringToolWorkspaceP.CreateLearningWorldDialogueOpen = false;
        return Task.CompletedTask;
    }
    
}