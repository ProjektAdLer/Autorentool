@using LanguageProvider
@inject NavigationManager UriHelper

<link rel="stylesheet" href="./css/assets/LanguageSwitch.css">
<div class="language-switch">
    @LanguageProviderForRazor.GetContent("BlazorMainLayout", "LanguageSwitchLanguage")
    <div class="info-button">i</div>
    <div class="languageprovider-checkbox-group">
        <input type="checkbox" id="languageprovider-checkbox" @onclick="LanguagePresentationLogicSwitch" checked="@LanguageButtonElement.CheckboxState">
        <label for="languageprovider-checkbox">
            <div class="languageprovider-switch-element">
                <div class="switch-text-DE">DE</div>
                <div class="switch-text-EN">EN</div>
            </div>
        </label>
    </div>
</div>

@code
{
    //Element logic for LanguageSwitch using the LanguageProviderForRazor
    private static class LanguageButtonElement
    {
        public static bool CheckboxState = false;
        private static uint _mSwitchIterator = 0;
        static readonly string[] MDatabasesForSwitch = { "de", "en" };

        static LanguageButtonElement()
        {
            try
            {
                LanguageProviderForRazor.SetLanguage(MDatabasesForSwitch[_mSwitchIterator]);
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
            }
        }

        internal static void ToggleSwitchLanguage()
        {
            _mSwitchIterator++;
            _mSwitchIterator %= (uint)MDatabasesForSwitch.Length;
            CheckboxState = !CheckboxState;
            LanguageProviderForRazor.SetLanguage(MDatabasesForSwitch[_mSwitchIterator]);
        }
        
    }

    private void LanguagePresentationLogicSwitch()
    {
        LanguageButtonElement.ToggleSwitchLanguage();
        UriHelper.NavigateTo(UriHelper.Uri, forceLoad: true);
    }
}