@using System.Diagnostics.CodeAnalysis
@implements ISidebar

<div class="h-[41rem] 2xl:h-[44rem] 3xl:h-[56rem] 1080p:h-[58rem] 2500p:h-[80rem] 3000p:h-[90rem] 3700p:h-[123rem] max-w-[40vw] min-w-[2vw] flex overflow-auto">
    <div class="py-3 @SidebarOrder()">
        <aside class="min-w-[50px] gap-2 flex flex-col rounded-lg">
            <CascadingValue Value="this">
                @ChildContent
            </CascadingValue>
        </aside>
    </div>
    @if (CurrentItem is not null)
    {
        <div class="flex flex-row w-fit bg-adlergrey-300 @ContentOrder() rounded-lg gap-1 p-2 main-content">
            @CurrentItem.MainContent
        </div>
    }
</div>

@code {
    private SidebarItem? _currentItem;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter, EditorRequired, AllowNull] //allow null since not providing the parameter produces a warning - n.stich
    public Side Side { get; set; }


    public SidebarItem? CurrentItem
    {
        get => _currentItem;
        private set
        {
            if (_currentItem == value) return;
            _currentItem = value;
            InvokeAsync(StateHasChanged);
        }
    }

    public void SetSidebarItem(SidebarItem item)
    {
        ClearSidebarItem();
        CurrentItem = item;
    }

    public void ClearSidebarItem()
    {
        CurrentItem = null;
    }

    private string SidebarOrder() => Side switch
    {
        Side.Left => "order-1",
        Side.Right => "order-2",
        _ => throw new ArgumentOutOfRangeException()
        };

    private string ContentOrder() => Side switch
    {
        Side.Left => "order-2",
        Side.Right => "order-1",
        _ => throw new ArgumentOutOfRangeException()
        };

}