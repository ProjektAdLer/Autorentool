@page "/app"
@using Presentation.PresentationLogic.Mediator
@using Presentation.PresentationLogic.SelectedViewModels
@using Presentation.View.Layout
@using Presentation.View.LearningSpace
@using Presentation.View.LearningWorld
@using Presentation.PresentationLogic.DropZone
@using Presentation.PresentationLogic.LearningElement
@using Presentation.PresentationLogic.LearningSpace
@using BusinessLogic.Commands
@using Microsoft.Extensions.Localization
@using Presentation.PresentationLogic.AuthoringToolWorkspace
@using System.ComponentModel
@using System.Diagnostics.CodeAnalysis
@using Presentation.Components.Forms.World
@using Presentation.Components.Forms.Space
@using Presentation.Components.Forms.Element
@using Presentation.Components.ContentFiles
@implements IDisposable

<div class="flex flex-col h-[calc(100dvh)] overflow-hidden w-screen bg-buttonbgblue font-sans">
    <HeaderBar/>
    <MudDropContainer T="ILearningElementViewModel"
                      Items="ElementDropZoneHelper.GetWorldAndSpaceElements()"
                      ItemsSelector="ElementDropZoneHelper.IsItemInDropZone"
                      ItemDropped="ElementDropZoneHelper.ItemUpdated"
                      Class="flex flex-row justify-between gap-1 items-start max-h-[calc(95dvh)] flex-auto">
        <ChildContent>
            <CascadingValue Value="@TriggerStateHasChanged" Name="TriggerMasterLayoutStateHasChanged">
                <SideContainer Side="Side.Left">
                    <Sidebar Side="Side.Left">
                        <SidebarItem
                            IsActive="Mediator.WorldDialogOpen"
                            RequestIsActiveToggle="Mediator.RequestToggleWorldDialog">
                            <SidebarContent>
                                <div class="w-10 p-1 my-1.5" title=@Localizer["SideBarContent.LearningWorldMetadata.Title"]>
                                    @* ReSharper disable Html.PathError *@
                                    <img class="w-full" src="CustomIcons/LeftSidebar/world-metadata-icon.png" alt=@Localizer["SideBarContent.LearningWorldMetadata.Alt"]>
                                    @* ReSharper restore Html.PathError *@
                                </div>
                            </SidebarContent>
                            <MainContent>
                                <WorldFormContainer/>
                            </MainContent>
                        </SidebarItem>
                        <MudDivider FlexItem="true"></MudDivider>
                        <SidebarItem
                            IsActive="Mediator.SpaceDialogOpen"
                            RequestIsActiveToggle="Mediator.RequestToggleSpaceDialog">
                            <SidebarContent>
                                <div class="w-10 p-1 my-1.5" title=@Localizer["SideBarContent.LearningSpaceMetadata.Title"]>
                                    @* ReSharper disable Html.PathError *@
                                    <img class="w-full" src="CustomIcons/LeftSidebar/space-metadata-icon.png" alt=@Localizer["SideBarContent.LearningSpaceMetadata.Alt"]>
                                    @* ReSharper restore Html.PathError *@
                                </div>
                            </SidebarContent>
                            <MainContent>
                                <SpaceFormContainer/>
                            </MainContent>
                        </SidebarItem>
                        <MudDivider FlexItem="true"></MudDivider>
                        <SidebarItem
                            IsActive="Mediator.StoryElementDialogOpen"
                            RequestIsActiveToggle="Mediator.RequestToggleStoryElementDialog">
                            <SidebarContent>
                                <div class="w-10 p-1 my-1.5" title="@Localizer["SideBarContent.StoryLearningElementMetadata.Title"]">
                                    @* ReSharper disable Html.PathError *@
                                    <img class="w-full" src="CustomIcons/LeftSidebar/storyelement-icon_adlerdarkblue.png" alt="@Localizer["SideBarContent.StoryLearningElementMetadata.Alt"]">
                                    @* ReSharper restore Html.PathError *@
                                </div>
                            </SidebarContent>
                            <MainContent>
                                <ElementFormContainer ElementMode="ElementMode.Story"/>
                            </MainContent>
                        </SidebarItem>
                        <SidebarItem
                            IsActive="Mediator.ElementDialogOpen"
                            RequestIsActiveToggle="Mediator.RequestToggleElementDialog">
                            <SidebarContent>
                                <div class="w-10 p-1 my-1.5" title=@Localizer["SideBarContent.LearningElementMetadata.Title"]>
                                    @* ReSharper disable Html.PathError *@
                                    <img class="w-full" src="CustomIcons/LeftSidebar/learningelements-icon.png" alt=@Localizer["SideBarContent.LearningElementMetadata.Alt"]>
                                    @* ReSharper restore Html.PathError *@
                                </div>
                            </SidebarContent>
                            <MainContent>
                                <ElementFormContainer ElementMode="ElementMode.Normal"/>
                            </MainContent>
                        </SidebarItem>
                        <SidebarItem
                            IsActive="Mediator.AdaptivityElementDialogOpen"
                            RequestIsActiveToggle="Mediator.RequestToggleAdaptivityElementDialog">
                            <SidebarContent>
                                <div class="w-10 p-1 my-1.5" title=@Localizer["SideBarContent.AdaptivityLearningElementMetadata.Title"]>
                                    @* ReSharper disable Html.PathError *@
                                    <img class="w-full" src="CustomIcons/LeftSidebar/adaptivityelement-icon.png" alt=@Localizer["SideBarContent.AdaptivityLearningElementMetadata.Alt"]>
                                    @* ReSharper restore Html.PathError *@
                                </div>
                            </SidebarContent>
                            <MainContent>
                                <ElementFormContainer ElementMode="ElementMode.Adaptivity"/>
                            </MainContent>
                        </SidebarItem>
                    </Sidebar>
                </SideContainer>
                <div class="flex flex-col w-full h-[98%]">
                    <CenterContainer>
                            @if (SelectedViewModelsProvider.LearningObjectInPathWay is ILearningSpaceViewModel)
                            {
                                <LearningSpaceView/>
                            }
                            else
                            {
                                @* ReSharper disable Html.PathError *@
                            <div class="absolute inset-0 m-auto flex flex-col justify-center">
                                <p class="px-4 text-center text-[#8b96a7] font-bold text-base 2xl:text-xl z-30">
                                    @Localizer["CenterContainer.OpenLearningSpace.Text.One"]
                                    <span class="inline-flex flex items-baseline">
                                        <img src="CustomIcons/Space/space-icon_bright.png" class="opacity-50 w-5 h-5 self-center" alt="Lernraum-Icon"/>
                                    </span>
                                    @Localizer["CenterContainer.OpenLearningSpace.Text.Two"]
                                    <MudTooltip Placement="Placement.Right" Class="w-96 p-4 bg-adlerdarkblue-200 shadow-xl text-start leading-relaxed">
                                        <TooltipContent>
                                            <MudText Class="cursor-default text-xs">@Localizer["CenterContainer.OpenLearningSpace.Text.Tooltip"]</MudText>
                                        </TooltipContent>
                                        <ChildContent>
                                            <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Info" Class="text-adlergrey-500 hover:text-adlerdarkblue"></MudIcon>
                                        </ChildContent>
                                    </MudTooltip>
                                </p>
                                <div class="flex flex-row justify-between items-center ml-2 w-[95%]">
                                    <MudIcon Icon="@Icons.Material.Filled.ArrowBack" Style="color: #8b96a7" Size="Size.Large" Class="animate-move-left-right"></MudIcon>
                                    <MudIcon Icon="@Icons.Material.Filled.ArrowForward" Style="color: #8b96a7" Size="Size.Large" Class="animate-move-right-left"></MudIcon>
                            </div>
                                </div>
                                    <img class="w-64 2xl:w-96 opacity-5 m-auto" src="CustomIcons/autorentool-logo.png" alt="Autorentool-Logo">
                            @* ReSharper restore Html.PathError *@
                        }
                    </CenterContainer>
                    <BottomContainer>
                        <UnplacedElementsDropZone/>
                    </BottomContainer>
                </div>
                <SideContainer Side="Side.Right">
                    <Sidebar Side="Side.Right">
                        <SidebarItem
                            IsActive="Mediator.WorldPathwayViewOpen"
                            RequestIsActiveToggle="Mediator.RequestToggleWorldPathwayView">
                            <SidebarContent>
                                <div class="w-10 p-1 my-1.5" title=@Localizer["SideBarContent.LearningPathWays.Title"]>
                                    @* ReSharper disable Html.PathError *@
                                    <img class="w-full" src="CustomIcons/RightSidebar/path-icon.png" alt=@Localizer["SideBarContent.LearningPathWays.Alt"]>
                                    @* ReSharper restore Html.PathError *@
                                </div>
                            </SidebarContent>
                            <MainContent>
                                <LearningWorldPathwayView/>
                            </MainContent>
                        </SidebarItem>
                        <SidebarItem
                            IsActive="Mediator.WorldTreeViewOpen"
                            RequestIsActiveToggle="Mediator.RequestToggleWorldTreeView">
                            <SidebarContent>
                                <div class="w-10 p-1 my-1.5" title=@Localizer["SideBarContent.LearningWorldOverView.Title"]>
                                    @* ReSharper disable Html.PathError *@
                                    <img class="w-full" src="CustomIcons/RightSidebar/overview-icon.png" alt=@Localizer["SideBarContent.LearningWorldOverView.Alt"]>
                                    @* ReSharper restore Html.PathError *@
                                </div>
                            </SidebarContent>
                            <MainContent>
                                <LearningWorldTreeView/>
                            </MainContent>
                        </SidebarItem>
                    </Sidebar>
                </SideContainer>
            </CascadingValue>
        </ChildContent>
        <ItemRenderer>
            <MudListItem T="string" Text="@context.Name"/>
        </ItemRenderer>
    </MudDropContainer>
</div>

@code {

    [Inject, AllowNull] //can never be null, DI will throw exception on unresolved types - n.stich
    public IMediator Mediator { get; set; }

    [Inject, AllowNull] //can never be null, DI will throw exception on unresolved types - n.stich
    public ILearningElementDropZoneHelper ElementDropZoneHelper { get; set; }

    [Inject, AllowNull] //can never be null, DI will throw exception on unresolved types - n.stich
    public IOnUndoRedo OnUndoRedoEventSource { get; set; }

    [Inject, AllowNull] //can never be null, DI will throw exception on unresolved types - n.stich
    IStringLocalizer<MasterLayout> Localizer { get; set; }

    [Inject, AllowNull] //see above
    internal ISelectedViewModelsProvider SelectedViewModelsProvider { get; set; }

    [Inject, AllowNull] internal NavigationManager NavManager { get; set; }

    //This is a hack to ensure that there always exists an instance of AuthoringToolWorkspacePresenter in the current scope
    //so we can ask to save worlds on closing the application
    [Inject, AllowNull] //can never be null, DI will throw exception on unresolved types - n.stich
    public IAuthoringToolWorkspacePresenter AuthoringToolWorkspacePresenter { get; set; }


    protected override void OnInitialized()
    {
        base.OnInitialized();
        Mediator.PropertyChanged += MediatorOnPropertyChanged;
        OnUndoRedoEventSource.OnRedo += OnUndoRedo;
        OnUndoRedoEventSource.OnUndo += OnUndoRedo;
        SelectedViewModelsProvider.PropertyChanged += MediatorOnPropertyChanged;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        //if no world is selected (after hot reload for example), navigate to overview
        if (SelectedViewModelsProvider.LearningWorld is null) NavManager.NavigateTo("/MyLearningWorldsOverview");
        //only open tabs if it's our first render after being created
        if (!firstRender) return;
        //open left and right tabs
        Mediator.RequestOpenWorldDialog();
        Mediator.RequestOpenPathwayView();
    }

    private void MediatorOnPropertyChanged(object? sender, PropertyChangedEventArgs e)
    {
        TriggerStateHasChanged();
    }

    private void OnUndoRedo(ICommand command)
    {
        TriggerStateHasChanged();
    }

    private void TriggerStateHasChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        Mediator.PropertyChanged -= MediatorOnPropertyChanged;
        OnUndoRedoEventSource.OnRedo -= OnUndoRedo;
        OnUndoRedoEventSource.OnUndo -= OnUndoRedo;
    }

}