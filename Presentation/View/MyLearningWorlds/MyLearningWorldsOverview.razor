@page "/MyLearningWorldsOverview"
@using Presentation.PresentationLogic.MyLearningWorlds
@using Shared
@using Presentation.Components.Forms.World
@using Presentation.Components
<main class="overflow-hidden relative min-h-screen max-h-screen h-screen w-screen bg-gradient-to-br m-0 from-adlerbggradientfrom to-adlerbggradientto">
    <HeaderBar/>
    <article class="p-2 flex flex-col items-center gap-6 overflow-hidden">
        <h3 class="font-bold text-2xl text-center text-adlerdarkblue">My Learning Worlds</h3>
        <section class="flex h-12 flex rounded-lg items-center justify-center">
            <MudButton StartIcon="@Icons.Material.Filled.UploadFile" Class="btn-standard p-6" Size="Size.Large" OnClick="LoadLearningWorldAsync">Import Learning World</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.Add" Class="btn-standard p-6" Size="Size.Large" OnClick="CreateLearningWorld">New Learning World</MudButton>
        </section>
        <section class="flex flex-col w-5/6 m-auto bg-blacktrans-200 p-2 rounded-lg">
            <MudGrid Class="flex justify-center overflow-auto h-96 shrink" Spacing="2">
                @foreach (var myLearningWorld in MyLearningWorldsProvider.GetLoadedLearningWorlds())
                {
                    <LearningWorldCard LearningWorldPath="@myLearningWorld" OnOpenLearningWorld="OpenLearningWorld" IsLoaded="true"/>
                }
                @foreach (var myLearningWorld in MyLearningWorldsProvider.GetSavedLearningWorlds())
                {
                    <LearningWorldCard LearningWorldPath="@myLearningWorld" OnOpenLearningWorld="OpenLearningWorld" OnDeleteFromSaved="MyLearningWorldsProvider.DeletePathFromSavedLearningWorlds" IsLoaded="false"/>
                }
            </MudGrid>
        </section>
        <MudButton Class="btn-standard normal-case" @onclick="OnClickMyLearningWorldsOverview">Gehe zur Lernwelt</MudButton>
        <section class="flex justify-self-end justify-center items-center">
            <ExportButton/>
            <DebugButton/>
        </section>
        <MudDrawer Width="26%" Height="100%" @bind-Open="_createLearningWorldDialogOpen" Variant="@DrawerVariant.Temporary" Position="DrawerPosition.Left">
            <MudDrawerContent>
                <CreateWorldForm OnSubmitted="() => _createLearningWorldDialogOpen = false"/>
            </MudDrawerContent>
        </MudDrawer>
    </article>
    <img class="pointer-events-none w-3/5 opacity-10 absolute -bottom-1/4 -right-64" src="/CustomIcons/world-icon-nobg.png"/>
</main>

@code {

#pragma warning disable CS8618
    [Inject]
    internal IMyLearningWorldsProvider MyLearningWorldsProvider { get; private init; }

    [Inject]
    internal NavigationManager NavManager { get; private init; }
#pragma warning restore CS8618

    private bool _createLearningWorldDialogOpen = false;

    private void OnClickMyLearningWorldsOverview()
    {
        NavManager.NavigateTo("/app");
    }

    private async void LoadLearningWorldAsync()
    {
        var retVal = await MyLearningWorldsProvider.LoadSavedLearningWorld();
        if (retVal)
        {
            OnClickMyLearningWorldsOverview();
        }
    }

    private void CreateLearningWorld()
    {
        _createLearningWorldDialogOpen = true;
    }

    private void OpenLearningWorld(SavedLearningWorldPath savedLearningWorldPath)
    {
        MyLearningWorldsProvider.OpenLearningWorld(savedLearningWorldPath);
        OnClickMyLearningWorldsOverview();
    }

}