@using Presentation.PresentationLogic.AuthoringToolWorkspace
@using Presentation.PresentationLogic.LearningSpace
@using Microsoft.Extensions.Localization
@using Presentation.PresentationLogic.AdvancedLearningSpaceEditor.AdvancedLearningSpaceEditor
@using Shared
@ChildContent

<section class="p-2 gap-1 flex flex-col justify-start">
    <div class="gap-8 flex justify-between items-start">
        <label id="learning-element-info" class="font-medium text-lg flex flex-col justify-stretch">
            <h3 class="text-base text-adlerblue-600 space-theme">
                <span class="text-adlergrey-600">@Localizer["AdvancedLearningSpaceEditor.Theme.Text"] </span>@LearningSpaceP.LearningSpaceVm?.Theme
            </h3>
            @*<h3 class="text-base text-adlerblue-600"><span class="text-adlergrey-600">Selected learning element: </span> @SelectedViewModelsProvider.LearningElement.Name</h3>*@
            <h3 class="text-base text-adlerblue-600 flex-initial break-all space-goals">
                <span class="text-adlergrey-600">@Localizer["AdvancedLearningSpaceEditor.Goals.Text"] </span>@LearningSpaceP.LearningSpaceVm?.Goals
            </h3>
        </label>
        <div class="min-w-max">
            <h3 class="text-base text-adlerblue-600 space-workload">
                <span class="text-adlergrey-600">@Localizer["AdvancedLearningSpaceEditor.Workload.Text"] </span> @LearningSpaceP.LearningSpaceVm?.Workload<span class="text-adlergrey-600"> min.</span>
            </h3>
            <h3 class="text-base text-adlerblue-600 space-points">
                <span class="text-adlergrey-600">@Localizer["AdvancedLearningSpaceEditor.Points.Text"] </span> @LearningSpaceP.LearningSpaceVm?.Points
            </h3>
            @* @ChildContent *@
        </div>
    </div>

    <div class="w-full bg-adlerbgbright border-2 border-b-adlerdeactivated flex-col items-start">
        <div style="clip-path: polygon(0% 0%,  0% 60%, 60% 60%, 60% 0%);">
            Raum content
            <div class="rounded-lg w-full grow overflow-scroll">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-[350px] 2xl:h-[525px] 1080p:h-[750px] 2500p:h-[1100px] 3000p:h-[1250px] 3700p:h-[1775px] w-[500px] 2xl:w-[500px] 1080p:w-[500px] 2500p:w-[500px] 3000p:w-[600px] 3700p:w-[750px]"
                     @onmousemove=@(e => MouseService.FireMove(this, e))
                                 @onmouseup=@(e => MouseService.FireUp(this, e))
                                 @onmouseleave=@(e => MouseService.FireOut(this, e))>
                    @if (AdvancedLearningSpaceEditorPresenter.AdvancedLearningSpaceViewModel != null)
                    {
                        @foreach (var advancedComponentSlot in AdvancedLearningSpaceEditorPresenter.AdvancedLearningSpaceViewModel.ContainedAdvancedLearningElementSlots)
                        {
                            <DraggableAdvancedLearningElementSlot ObjectName="learningElementSlot"
                                                                  AdvancedComponent="advancedComponentSlot"
                                                                  AdvancedPositioningService="AdvancedLearningSpaceEditorPresenter"
                                                                  OnClickedDraggable="@AdvancedLearningSpaceEditorPresenter.SetSelectedAdvancedComponentViewModel"
                                                                  OnDraggedDraggable="@AdvancedLearningSpaceEditorPresenter.DragSelectedAdvancedComponent"
                                                                  OnClickedDeleteObject="@AdvancedLearningSpaceEditorPresenter.DeleteSelectedAdvancedComponent"
                                                                  OnRightClickedDraggable="@AdvancedLearningSpaceEditorPresenter.RightClickOnAdvancedComponent"
                                                                  @* ShowingRightClickMenu="learningSpace == LearningWorldP.RightClickedLearningObject" *@
                                                                  @* OnCloseRightClickMenu="@AdvancedLearningSpaceEditorPresenter.HideRightClickMenu" *@
                                                                  AdvancedEditorPresenter="@AdvancedLearningSpaceEditorPresenter">
                            </DraggableAdvancedLearningElementSlot>
                        }
                    }
                    <!-- The RightClickMenu might lies behind other spaces. 
                    This line brings the RightClickMenu back to top, but the clickable buttons do not work anymore. -->
                    <!--<use xlink:href="#rightClickMenu" />-->
                </svg>
            </div>
        </div>
    </div>
    <div class="w-full bg-adlerbgbright border-2 border-b-adlerdeactivated">
        <button
            class="h-[90px] w-[90px] hover:bg-gray-700 hover:text-white rounded-md px-2 py-1 text-sm font-medium flex-col m-0.5 ml-5"
            @onclick=CreateAdvancedLearningElementSlot>
            <div class="h-[45px]">
                <img src="CustomIcons/AdvancedLearningRoomGeneratorIcons/learning-element-slot-icon-nobg.png" class="pointer-events-none w-8 h-8">
            </div>
            <div class="h-[45px]">
                @Localizer["AdvancedLearningSpaceEditor.LearningElementSlots.Title"]
            </div>
        </button>
        <button
            class="h-[90px] w-[90px] hover:bg-gray-700 hover:text-white rounded-md px-2 py-1 text-sm font-medium flex-col m-0.5 ml-5"
            @onclick=CreateAdvancedLearningElementSlot>
            <div class="h-[45px]">
                <img src="CustomIcons/AdvancedLearningRoomGeneratorIcons/decoration-nobg.png" class="pointer-events-none w-8 h-8">
            </div>
            <div class="h-[45px]">
                @Localizer["AdvancedLearningSpaceEditor.Decorations.Title"]
            </div>
        </button>
        <button
            class="h-[90px] w-[90px] hover:bg-gray-700 hover:text-white rounded-md px-2 py-1 text-sm font-medium flex-col m-0.5 ml-5"
            @onclick=CreateAdvancedLearningElementSlot>
            <div class="h-[45px]">
                <img src="CustomIcons/AdvancedLearningRoomGeneratorIcons/door-icon-nobg.png" class="pointer-events-none w-8 h-8">
            </div>
            <div class="h-[45px]">
                @Localizer["AdvancedLearningSpaceEditor.Doors.Title"]
            </div>
        </button>
        <button
            class="h-[90px] w-[90px] hover:bg-gray-700 hover:text-white rounded-md px-2 py-1 text-sm font-medium flex-col m-0.5 ml-5"
            @onclick=CreateAdvancedLearningElementSlot>
            <div class="h-[45px]">
                <img src="CustomIcons/AdvancedLearningRoomGeneratorIcons/window-icon-nobg.png" class="pointer-events-none w-8 h-8">
            </div>
            <div class="h-[45px]">
                @Localizer["AdvancedLearningSpaceEditor.Windows.Title"]
            </div>
        </button>
    </div>
</section>


@code
{
#pragma warning disable CS8618 // injected by framework 
    [Inject]
    public IMouseService MouseService { get; set; }

    [Inject]
    public ILearningSpacePresenter LearningSpaceP { get; set; }

    [Inject]
    public IAdvancedLearningSpaceEditorPresenter AdvancedLearningSpaceEditorPresenter { get; set; }

    [Inject]
    private IStringLocalizer<AdvancedLearningSpaceEditorView> Localizer { get; set; }
#pragma warning restore CS8618

    private ExceptionWrapper? ErrorState { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private void CreateAdvancedLearningElementSlot()
    {
        AdvancedLearningSpaceEditorPresenter.CreateAdvancedLearningElementSlot();
    }

}