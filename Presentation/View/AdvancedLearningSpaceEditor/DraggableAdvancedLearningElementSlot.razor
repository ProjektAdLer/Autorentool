@using Presentation.PresentationLogic.LearningElement
@using Presentation.PresentationLogic.LearningSpace
@using System.Diagnostics.CodeAnalysis
@using Presentation.PresentationLogic.AdvancedLearningSpaceEditor.AdvancedComponent
@using Presentation.PresentationLogic.AdvancedLearningSpaceEditor.AdvancedLearningSpace
@using Presentation.View.LearningElement

<MudDropZone
    T="ILearningElementViewModel"
    Identifier="@AdvancedComponent.Identifier"
    class="absolute cursor-pointer rounded-lg border-2 border-adlergrey-200 bg-adlerdeactivatedtext mud-border-lines-default p-6 m-8 w-24 h-3 flex justify-center items-center over:bg-adlerblue-300 hover:border-adlerblue-300"
    style="@GenerateStyleString()"
    
    @onclick="() => LearningSpaceP.ClickOnSlot(AdvancedComponent.SlotKey)"
    >

    <ItemRenderer>
        @* this is only to insert the element itself, not the draggable slotposition *@
        <DragDropLearningElement
            LearningElement="@context"
            OnShowLearningElementContent="@LearningSpaceP.ShowElementContent"
            OnEditLearningElement="@LearningSpaceP.ClickedLearningElement"
            OnDeleteLearningElement="@LearningSpaceP.DeleteLearningElement"
            OnClicked="@LearningSpaceP.ClickedLearningElement"/>
    </ItemRenderer>
    <ChildContent>
        @{
            var advancedSpaceVm = LearningSpaceP.LearningSpaceVm as AdvancedLearningSpaceViewModel;
            if (advancedSpaceVm == null || advancedSpaceVm.GetType() != typeof(AdvancedLearningSpaceViewModel))
            {
                throw new Exception("LearningSpaceP.LearningSpaceVm is not of type AdvancedLearningSpaceViewModel");
            }
            if (!advancedSpaceVm.AdvancedLearningSpaceLayout.AdvancedLearningElementSlots.ContainsKey(AdvancedComponent.SlotKey))
            {
                <MudIcon Icon="@Icons.Material.Filled.Add" Style="font-size: 2rem;" Class="text-white"></MudIcon>
            }
        }
    </ChildContent>
</MudDropZone>
@code {
    [Inject, AllowNull]
    public ILearningSpacePresenter LearningSpaceP { get; set; }
    
    [Parameter, EditorRequired]
    public IAdvancedLearningElementSlotViewModel AdvancedComponent { get; set; } = null!;

    private string GenerateStyleString()
    {
        return "top:" + (AdvancedComponent.PositionY - 110) + "px; left:" + (AdvancedComponent.PositionX - 82) +"px;";
    }

}