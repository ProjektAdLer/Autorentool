@* @using Presentation.PresentationLogic *@
@* @using Presentation.PresentationLogic.LearningWorld *@
@* @using Presentation.PresentationLogic.SelectedViewModels *@
@* @using Presentation.Components *@
@* @using Presentation.Components.RightClickMenu *@
@* @using System.Diagnostics.CodeAnalysis *@
@* @using Presentation.PresentationLogic.AdvancedLearningSpaceEditor.AdvancedComponent *@
@* <Draggable LearningObject="EditorObject" OnClicked="@OnClickedDraggable" OnDoubleClicked="@OnDoubleClickedDraggable" *@
@*            OnRightClicked="@OnRightClickedDraggable" OnDragged="@OnDraggedDraggable" *@
@*            @bind-X="@EditorObject.PositionX" @bind-Y="@EditorObject.PositionY"> *@
@* *@
@* *@
@*     <Clickable OnClickedParam="EditorObject" OnClicked="@OnClickedDeleteObject"> *@
@*         @((MarkupString)DeleteObjectButtonShape) *@
@*     </Clickable> *@
@* </Draggable> *@
@* *@
@* @if (ShowingRightClickMenu) *@
@* { *@
@*     <RightClickMenu LearningObject="@EditorObject" *@
@*                     MenuEntries="@GetRightClickMenuEntries()" *@
@*                     OnClose="() => OnCloseRightClickMenu.InvokeAsync()"/> *@
@* } *@
@* *@
@* @ChildContent *@
@* *@
@* *@
@* @code { *@
@* *@
@*     [Parameter] *@
@*     public RenderFragment? ChildContent { get; set; } *@
@* *@
@*     // Overwrite nullability warning below because we check in OnParametersSet -n.stich *@
@*     [Parameter, EditorRequired, AllowNull] //allow null since not providing the parameter produces a warning - n.stich *@
@*     public IAdvancedComponentViewModel EditorObject { get; set; } = null!; *@
@* *@
@*     [Parameter, EditorRequired] *@
@*     public EventCallback<IAdvancedComponentViewModel> OnClickedDraggable { get; set; } *@
@* *@
@*     [Parameter] *@
@*     public EventCallback<IAdvancedComponentViewModel> OnDoubleClickedDraggable { get; set; } *@
@* *@
@*     [Parameter, EditorRequired] *@
@*     public EventCallback<IAdvancedComponentViewModel> OnRightClickedDraggable { get; set; } *@
@* *@
@*     [Parameter, EditorRequired] *@
@*     public EventCallback OnCloseRightClickMenu { get; set; } *@
@* *@
@*     [Parameter, EditorRequired] *@
@*     public bool ShowingRightClickMenu { get; set; } *@
@* *@
@*     [Parameter, EditorRequired] *@
@*     public DraggedEventArgs<IAdvancedComponentViewModel>.DraggedEventHandler? OnDraggedDraggable { get; set; } *@
@* *@
@*     [Parameter, EditorRequired] *@
@*     public EventCallback<IAdvancedComponentViewModel> OnClickedDeleteObject { get; set; } *@
@* *@
@*     [Inject] //can never be null, DI will throw exception on unresolved types - n.stich *@
@*     public ISelectedViewModelsProvider? SelectedObjectsService { get; set; } *@
@* *@
@*     protected abstract string Text { get; } *@
@* *@
@*     protected abstract string Title { get; } *@
@* *@
@*     protected abstract string ObjectName { get; } *@
@* *@
@*     protected abstract string OnHoveredObjectShape { get; } *@
@* *@
@*     protected abstract string ObjectShape { get; } *@
@* *@
@*     protected abstract string ObjectStyleWhenSelected { get; } *@
@* *@
@*     protected abstract string ObjectStyleWhenNotSelected { get; } *@
@* *@
@*     private string ObjectStyle => SelectedObjectsService?.LearningObjectInPathWay == EditorObject ? ObjectStyleWhenSelected : ObjectStyleWhenNotSelected; *@
@* *@
@*     protected abstract string DeletePathButtonShape { get; } *@
@* *@
@*     protected abstract string DeleteObjectButtonShape { get; } *@
@* *@
@*     protected abstract List<RightClickMenuEntry> GetRightClickMenuEntries(); *@
@* *@
@*     protected override void OnParametersSet() *@
@*     { *@
@*         base.OnParametersSet(); *@
@*         if (EditorObject is null) *@
@*         { *@
@*             throw new ArgumentNullException(nameof(EditorObject)); *@
@*         } *@
@*     } *@
@* *@
@* } *@