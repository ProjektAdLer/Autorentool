<div class="gap-2 my-4 @Style">
    <div class="flex flex-row toggler" @onclick="@Toggle" tabindex="0" @onkeydown="@OnKeyDown">
        @if (Collapsed)
        {
            <MudIcon Icon="@Icons.Material.Filled.ArrowRight"/>
        }
        else
        {
            <MudIcon Icon="@Icons.Material.Filled.ArrowDropDown"/>
        }
        @if (Title is not null)
        {
            <p class="cursor-pointer text-adlergrey-800 font-bold text-base 2xl:text-lg"> @Title </p>
        } else if (TitleContent is not null)
        {
            @TitleContent
        }
    </div>

    @if (!Collapsed)
    {
        <div class="mt-0 inner">
            @ChildContent
        </div>
    }
</div>

@code {

    [Parameter] public string? Style { get; set; }

    [Parameter] public RenderFragment? ChildContent { get; set; }

    [Parameter] public bool Collapsed { get; set; }

    [Parameter] public EventCallback<bool> CollapsedChanged { get; set; }

    [Parameter] public string? Title { get; set; }
    [Parameter] public RenderFragment? TitleContent { get; set; }

    private void Toggle()
    {
        Collapsed = !Collapsed;
        CollapsedChanged.InvokeAsync(Collapsed);
    }


    private void OnKeyDown(KeyboardEventArgs args)
    {
        if (args.Key is "Enter" or " ")
        {
            Toggle();
        }
    }

}