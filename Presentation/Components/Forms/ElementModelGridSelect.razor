@using Shared
@using Presentation.Components.Forms.Element
@using Microsoft.Extensions.Localization
@using System.Diagnostics.CodeAnalysis
@inherits MudBaseInput<ElementModel>

<div class="grid grid-cols-4 2xl:grid-cols-5 2500p:grid-cols-7">
    @foreach (var elementModel in Elements)
    {
        var classString = elementModel == Value ? "bg-adlerblue-600" : "hover:bg-adlergrey-100";
        <MudListItem Value="@(elementModel)"
                     Class="@classString"
                     OnClick="() => OnItemClick(elementModel)">
            <MudTooltip Class="bg-adlergrey-200 shadow-xl" Placement="Placement.Right" Delay="150" Duration="250" Arrow="true">
                <ChildContent>
                    <img class="inset-0 w-full drop-shadow-xl p-0"
                             src="@ElementModelHandler.GetIconForElementModel(elementModel)"
                             alt="@Localizer["ElementModelGridSelect.3DRepresentation.Alt"]"/>
                </ChildContent>

                <TooltipContent>
                    <div class="flex flex-col gap-2 justify-center items-center w-56 h-64">
                        <MudText>@Localizer["ElementModelGridSelect.3DRepresentation.Title"]</MudText>
                        <MudImage Src="@ElementModelHandler.GetIconForElementModel(elementModel)" Width="180"></MudImage>
                    </div>
                </TooltipContent>


            </MudTooltip>
        </MudListItem>
    }
</div>

@code {

    [Parameter, EditorRequired, AllowNull] //allow null since not providing the parameter produces a warning
    public IEnumerable<ElementModel> Elements { get; set; }

    [Inject, AllowNull] //can never be null, DI will throw exception on unresolved types
    internal IElementModelHandler ElementModelHandler { get; set; }

    [Inject, AllowNull] //can never be null, DI will throw exception on unresolved types
    internal IStringLocalizer<ElementModelGridSelect> Localizer { get; set; }

    private void OnItemClick(ElementModel elementModel)
    {
        SetValueAsync(elementModel);
    }

}