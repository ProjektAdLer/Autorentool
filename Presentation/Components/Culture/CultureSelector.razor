@using System.Globalization
@using Microsoft.Extensions.Localization
@inject NavigationManager Navigation
@inject IStringLocalizer<CultureSelector> Localizer

        <section class="flex flex-row justify-center drop-shadow p-1">
            <div dir="ltr" class="flex justify-center items-center">
                <button title="German" class="text-white bg-buttonbgblue rounded-l-[28px] py-1 px-2 @(Equals(Culture, supportedCultures[1]) ? "bg-adlerbggradientto" : "")" @onclick="() => SetCulture(supportedCultures[0])">
                    <p class="z-10 text-white font-bold @(Equals(Culture, supportedCultures[1]) ? "text-adlerbggradientto hover:text-adlerdarkblue-500" : "")">DE</p>
                </button>
                <img src="CustomIcons/german-flag-long.png" alt="german-flag-icon" class="z-0 pointer-events-none opacity-90 absolute rounded-full w-6 h-6 @(Equals(Culture, supportedCultures[1]) ? "opacity-20" : "")">
            </div>
            <div dir="rtl" class="flex justify-center items-center">
                <button title="English" class="text-white bg-buttonbgblue rounded-r-[28px] py-1 px-2 @(Equals(Culture, supportedCultures[0]) ? "bg-adlerbggradientto" : "")" @onclick="() => SetCulture(supportedCultures[1])">
                    <p class="z-10 text-white font-bold @(Equals(Culture, supportedCultures[0]) ? "text-adlerbggradientto hover:text-adlerdarkblue-500" : "")">EN</p>
                </button>
                <img src="CustomIcons/great-britain-flag.png" alt="great-britain-flag-icon" class="z-0 pointer-events-none opacity-90 absolute rounded-full w-6 h-6 @(Equals(Culture, supportedCultures[0]) ? "opacity-20" : "")">
            </div>
        </section>

@code
{
    private CultureInfo[] supportedCultures = 
    {
        new("de-DE"),
        new("en-DE")
    };

    protected override void OnInitialized()
    {
        Culture = CultureInfo.CurrentCulture;
    }

    /// <summary>
    /// Gets or sets the current culture of the application.
    /// </summary>
    private CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set
        {
            if (Equals(CultureInfo.CurrentCulture, value)) return;
            var uri = new Uri(Navigation.Uri)
                .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
            var cultureEscaped = Uri.EscapeDataString(value.Name);
            var uriEscaped = Uri.EscapeDataString(uri);

            Navigation.NavigateTo(
                $"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}",
                forceLoad: true);
        }
    }

    private void SetCulture(CultureInfo culture)
    {
        Culture = culture;
    }
}