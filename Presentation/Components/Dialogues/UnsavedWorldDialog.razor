@using Microsoft.Extensions.Localization
@using System.Diagnostics.CodeAnalysis
<MudDialog>
    <DialogContent>
        <MudText>
            @((MarkupString)Localizer["UnsavedWorldDialog.Content.Text", WorldName].Value)
        </MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Yes">@Localizer["UnsavedWorldDialog.Button.Yes"]</MudButton>
        <MudButton OnClick="No">@Localizer["UnsavedWorldDialog.Button.No"]</MudButton>
        <MudButton OnClick="Cancel">@Localizer["UnsavedWorldDialog.Button.Cancel"]</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [Inject, AllowNull] //can never be null, DI will throw exception on unresolved types - n.stich
    IStringLocalizer<UnsavedWorldDialog> Localizer { get; set; }

    [CascadingParameter]
    public IMudDialogInstance? MudDialog { get; set; }

    [Parameter, EditorRequired, AllowNull] //allow null since not providing the parameter produces a warning - n.stich
    public string WorldName { get; set; }

    private void Yes() => MudDialog?.Close(DialogResult.Ok(true));
    private void No() => MudDialog?.Close(DialogResult.Ok(false));
    private void Cancel() => MudDialog?.Cancel();
}