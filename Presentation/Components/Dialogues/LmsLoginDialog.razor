@using Presentation.PresentationLogic.API
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6"> Lms Connection</MudText>
    </TitleContent>
    <DialogContent>
        @if (_isLmsConnected)
        {
            <MudText>Logged in as @PresentationLogic.LoginName</MudText>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Logout">Logout</MudButton>
        }
        else
        {
            <MudForm>
                <MudTextField @bind-Value="_username" Label="Username"/>
                <MudTextField @bind-Value="_password" Label="Password" OnKeyPress="OnKeyPress"
                              InputType=@PasswordInputType Adornment="Adornment.End" AdornmentIcon=@ShowPasswordIcon
                              OnAdornmentClick="() => _isPasswordVisible = !_isPasswordVisible"
                              AdornmentAriaLabel="Show Password"/>
                @if (_showError)
                {
                    <MudText>Wrong Username or Password</MudText>
                }
                <!--TODO: Should be set in the config-->
                <a href="https://demo.moodle.projekt-adler.eu/login/forgot_password.php" target="_blank" title="Lost password?">
                    Forgot Password?
                </a>
                <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="SubmitForm">Login</MudButton>
            </MudForm>
        }
    </DialogContent>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }


    [Inject]
    public IPresentationLogic PresentationLogic { get; set; }

    private string _username = "";
    private string _password = "";
    private bool _showError = false;
    private bool _isLmsConnected = false;

    private bool _isPasswordVisible = false;
    private InputType PasswordInputType => _isPasswordVisible ? InputType.Text : InputType.Password;
    private string ShowPasswordIcon => _isPasswordVisible ? Icons.Material.Filled.Visibility : Icons.Material.Filled.VisibilityOff;

    private static DialogOptions Options => new DialogOptions() {CloseOnEscapeKey = true, CloseButton = true, MaxWidth = MaxWidth.ExtraSmall, FullWidth = true};

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        _username = "";
        _password = "";
        _showError = false;
        _isLmsConnected = false;
        CheckIfLmsIsConnected();
        MudDialog.SetOptions(Options);
    }

    private async void CheckIfLmsIsConnected()
    {
        _isLmsConnected = await PresentationLogic.IsLmsConnected();
        StateHasChanged();
    }

    private async void SubmitForm()
    {
        if (_username == "" || _password == "") return;
        var success = await PresentationLogic.Login(_username, _password);
        if (success)
        {
            _showError = false;
            CheckIfLmsIsConnected();
        }
        else
        {
            _showError = true;
            _password = "";
            StateHasChanged();
        }
    }

    private void Logout()
    {
        PresentationLogic.Logout();
        CheckIfLmsIsConnected();
    }

    void Cancel()
    {
        _isLmsConnected = false;
        MudDialog.Cancel();
    }

    private void OnKeyPress(KeyboardEventArgs eventArgs)
    {
        if (eventArgs.Key == "Enter")
        {
            SubmitForm();
        }
    }

}