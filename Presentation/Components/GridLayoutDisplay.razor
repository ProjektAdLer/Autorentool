@using Shared.Extensions
@using System.Diagnostics.CodeAnalysis
@typeparam TItem

<div class="grid-layout-display-root">
    @if (HeaderTitle != null)
    {
        <div class="header">
            <h4>@HeaderTitle</h4>
        </div>
    }
    @ChildContent
    <div class="content container">
        @{
            foreach (var row in Items.Split(ItemsPerRow!.Value))
            {
                <div class="row justify-content-center">
                    @foreach (var element in row)
                    {
                        @ItemRenderTemplate(element)
                    }
                </div>
            }
        }
    </div>
</div>

@code {

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        HeaderTitle ??= null;
        ItemsPerRow ??= 3;
    }

    // ReSharper disable RedundantDefaultMemberInitializer
    //null! because Rider doesn't understand [Parameter, EditorRequired, AllowNull] //allow null since not providing the parameter produces a warning - n.stich combination sets parameters
    //before any of our code is executed.
    ///<summary>Items to be displayed in the grid layout display.</summary>
    [Parameter, EditorRequired, AllowNull] //allow null since not providing the parameter produces a warning - n.stich
    public IEnumerable<TItem> Items { get; set; } = null!;

    ///<summary>Template component of how items should be rendered.</summary>
    [Parameter, EditorRequired, AllowNull] //allow null since not providing the parameter produces a warning - n.stich
    public RenderFragment<TItem> ItemRenderTemplate { get; set; } = null!;
    // ReSharper restore RedundantDefaultMemberInitializer

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    ///<summary>(Optional) Title displayed in the header above the items.</summary>
    [Parameter]
    public string? HeaderTitle { get; set; }

    ///<summary>(Optional) How many items should be displayed per row, defaults to 3.</summary>
    [Parameter]
    public uint? ItemsPerRow { get; set; }

}