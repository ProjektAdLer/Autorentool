name: Coveralls Code Coverage
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    env:
      dotNetVersion: net6.0
      dotNetConfiguration: Release
      runtimeTarget: win-x86
      excludeMask: "[ElectronWrapper]*,[ElectronWrapper.*]*,[AuthoringToolTest.*]*,[AuthoringToolTest]*,[GeneratorTest]*,[AuthoringToolLibTest]"
    strategy:
      matrix:
        test_project:
          - AuthoringToolTest
          - BackendAccessTest
          - BusinessLogicTest
          - DataAccessTest
          - GeneratorTest
          - IntegrationTest
          - PresentationTest
          - SharedTest
    steps:
      # checkout the repo
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      
      # install runtime
      - name: Setup Dotnet for use with actions
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x'
      
      # build only the specific test project we are testing   
      - name: Build test project
        run: dotnet build ${{ matrix.test_project }}
        
      # run test with coverage collection
      - name: Run ${{ matrix.test_project }} tests
        run: dotnet test ${{ matrix.test_project }} --collect:"XPlat Code Coverage;Exclude=${{ env.excludeMask }}"

      # submit result from parallel to coveralls
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@v2
        with:
          flag-name: run-${{ join(matrix.*, '-') }}
          parallel: true
          file: ${{ matrix.test_project }}/TestResults/*/coverage.cobertura.xml

  finish:
    needs: build
    if: ${{ always() }}
    runs-on: windows-latest
    steps:
      # tell coveralls we are done with this run
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
          carryforward: "run-AuthoringToolTest,run-BackendAccessTest,run-BusinessLogicTest,run-DataAccessTest,run-GeneratorTest,run-IntegrationTest,run-PresentationTest,run-SharedTest"